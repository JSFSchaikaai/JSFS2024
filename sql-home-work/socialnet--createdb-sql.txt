CREATE DATABASE social
    WITH
    OWNER = root
    ENCODING = 'UTF8'
    LC_COLLATE = 'en_US.UTF-8'
    LC_CTYPE = 'en_US.UTF-8'
    TABLESPACE = pg_default
    CONNECTION LIMIT = -1
    IS_TEMPLATE = False;

CREATE TABLE IF NOT EXISTS public.users
(
    id_user integer NOT NULL DEFAULT nextval('users_id_user_seq'::regclass),
    firstname character varying COLLATE pg_catalog."default",
    lastname character varying COLLATE pg_catalog."default",
    CONSTRAINT users_pkey PRIMARY KEY (id_user)
)

CREATE TYPE public.type_relation AS ENUM
    ('Друг', 'Враг', 'Сосед', 'Родственник');


CREATE TABLE IF NOT EXISTS public.user_relations
(
    id_user integer NOT NULL,
    id_other_user integer NOT NULL,
    relations type_relation NOT NULL,
    CONSTRAINT relations_id_other_user_fkey FOREIGN KEY (id_other_user)
        REFERENCES public.users (id_user) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION
        NOT VALID,
    CONSTRAINT relations_id_user_fkey FOREIGN KEY (id_user)
        REFERENCES public.users (id_user) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION
        NOT VALID
)

CREATE TABLE IF NOT EXISTS public."group"
(
    id_group integer NOT NULL DEFAULT nextval('group_id_group_seq'::regclass),
    name character varying COLLATE pg_catalog."default" NOT NULL,
    description character varying COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT group_pkey PRIMARY KEY (id_group)
)

CREATE TABLE IF NOT EXISTS public.group_members
(
    id_group integer NOT NULL,
    id_user integer NOT NULL,
    CONSTRAINT group_members_id_group_fkey FOREIGN KEY (id_group)
        REFERENCES public."group" (id_group) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION
        NOT VALID,
    CONSTRAINT group_members_id_user_fkey FOREIGN KEY (id_user)
        REFERENCES public.users (id_user) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION
        NOT VALID
)